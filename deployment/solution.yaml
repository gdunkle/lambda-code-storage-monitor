AWSTemplateFormatVersion: 2010-09-09

Description: lambda-code-storage-monitor - Publishes a custom metric to monitor code storage

Parameters:

  Default:
    Description: Default parameter
    Type: String
    Default: Default

Mappings:

  MetricsMap:
    Send-Data:
      SendAnonymousData: "Yes" # change to 'No' if needed

  SourceCode:
    General:
      S3Bucket: %%BUCKET_NAME%%
      KeyPrefix: "%%SOLUTION_NAME%%/%%VERSION%%"

Resources:
  RunRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: 'Runs the monitor on a schedule'
      Name: 'lamdba-code-storage-monitor-rule'
      ScheduleExpression: "rate(2 hours)"
      Targets:
        - Arn: !GetAtt MonitorFunction.Arn
          Id: !Ref MonitorFunction
  PermissionForRuleToInvokeLambda:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !Ref MonitorFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt RunRule.Arn
  MonitorFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: !Sub DefaultFunction-Policy-${AWS::StackName}-${AWS::Region}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:ListFunctions
                  - lambda:ListVersionsByFunction
                  - lambda:ListLayers
                  - lambda:ListLayerVersions
                  - lambda:GetLayerVersion
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource:
                  - '*'
  MonitorFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Place holder for lambda function
      Environment:
        Variables:
          LOG_LEVEL: 'DEBUG' # change to WARN, ERROR or DEBUG as needed
          PAGE_SIZE: 25
      Handler: monitor_function.lambda_handler
      Role: !GetAtt MonitorFunctionRole.Arn
      Code:
        S3Bucket: !Join ["-", [!FindInMap ["SourceCode", "General", "S3Bucket"], Ref: "AWS::Region"]]
        S3Key: !Join ["/", [!FindInMap ["SourceCode", "General", "KeyPrefix"],  "%%ZIP_FILE_NAME%%"]]
      Runtime: python3.8
      Layers:
        - !Ref DefaultLayer
      Timeout: 30
  MonitorFunctionVersion:
    Type: AWS::Lambda::Version
    Properties:
      Description: !Sub "Latest version of ${MonitorFunction}"
      FunctionName: !GetAtt MonitorFunction.Arn
  DefaultLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.8
      Content:
        S3Bucket: !Join ["-", [!FindInMap ["SourceCode", "General", "S3Bucket"], Ref: "AWS::Region"]]
        S3Key: !Join ["/", [!FindInMap ["SourceCode", "General", "KeyPrefix"],  "%%LAYER_FILE_NAME%%"]]
      Description: Layer for lambda-code-storage-monitor
      LayerName: lambda-code-storage-monitor-layer
  LambdaCodeStorageMonitorNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: lambda-code-storage-monitor-notification-topic
      TopicName: lambda-code-storage-monitor-notification-topic
  LambdaCodeStorageQuotaAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref LambdaCodeStorageMonitorNotificationTopic
      AlarmName: !Sub "lambda-code-storage-quota-alarm"
      AlarmDescription: Alarm if total lambda code storage get to 80% of quota
      MetricName: Code Size
      Namespace: AWS/Lambda
      Statistic: Average
      Period: 21600
      EvaluationPeriods: 1
      Threshold: 60000000000
      TreatMissingData: notBreaching
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: All Code
          Value: "Total"
  Dashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: lambda-code-storage
      DashboardBody: !Sub |
        {
          "start": "-P1D",
          "periodOverride": "auto",
          "widgets": [
                         {
                           "type": "metric",
                           "x": 0,
                           "y": 0,
                           "width": 24,
                           "height": 12,
                           "properties": {
                             "metrics": [
                                 [ "Custom/Lambda", "Code Size", "All Code", "Total", { "label": "Total Code Size" } ],
                                 [ "...", "Layers", ".", { "label": "Layer Code Size" } ],
                                 [ "...", "Functions", ".", { "label": "Function Code Size" } ]
                             ],
                             "view": "timeSeries",
                             "stacked": false,
                             "region": "us-east-2",
                             "stat": "Maximum",
                             "period": 21600,
                             "title": "Lambda Code Storage",
                             "annotations": {
                                 "horizontal": [
                                     {
                                         "label": "Lambda Code Storage Quota",
                                         "value": 75000000000
                                     }
                                 ]
                             }
                           }
                         }
                    ]
        }
            